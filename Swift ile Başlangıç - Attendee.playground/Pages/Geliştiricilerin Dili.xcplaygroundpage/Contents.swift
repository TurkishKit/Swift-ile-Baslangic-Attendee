//: ## GeliÅŸtiricilerin Dili
//: Bir uygulama geliÅŸtirici olmak, Xcode'da ne yazacaÄŸÄ±nÄ±zÄ± dÃ¼ÅŸÃ¼nmekten fazlasÄ±dÄ±r. ProgramcÄ±lar, problemleri nasÄ±l Ã§Ã¶zeceklerini tartÄ±ÅŸmak iÃ§in birlikte Ã§alÄ±ÅŸÄ±rlar, ve birbirlerine bir ÅŸeyler aÃ§Ä±klarlar. Bu nedenle, programcÄ±larÄ±n kullandÄ±ÄŸÄ± terimleri Ã¶ÄŸrenmek Ã§ok Ã¶nemli.
//:
//: Bu eÄŸitim boyunca kod yazmayÄ± Ã¶ÄŸreneceksiniz, ancak yanÄ±nda diÄŸer geliÅŸtiricilerle kod hakkÄ±nda konuÅŸurken bilmeniz gereken terimleri de Ã¶ÄŸreneceksiniz.
//:
//: Ã–rneÄŸin, bir 'kod satÄ±rÄ±' resmi dilde bir _ifade_ olarak bilinir.
//:
//: _Sabit_ ve _tanÄ±mlayÄ±cÄ±_ terimlerini bu Playground dosyasÄ± Ã¼zerinde daha Ã¶nce de gÃ¶rdÃ¼nÃ¼z. Daha fazla terimi anlamak iÃ§in aÅŸaÄŸÄ±daki ifadeyi dikkatlice inceleyin.
let kopeklerinSayisi = 101
//: Swift dilinde bir sabit belirlediÄŸinizde, bu iÅŸleme bir sabit _tanÄ±mlamak_ deniyor. Bu da, yukarÄ±daki ifadenin resmi olarak bir _tanÄ±mlama_ olduÄŸu anlamÄ±na gelir. "`kÃ¶peklerinSayisi` isminin 101 deÄŸerine sahip olacaÄŸÄ±nÄ± tanÄ±mlÄ±yorum!".
//:
//: `let` sÃ¶zcÃ¼ÄŸÃ¼ ise bir _anahtar kelime_ye Ã¶rnektir. Anahtar kelimeler Swift dilinde Ã¶zel anlamlara sahiplerdir ve isim olarak kullanÄ±lamazlar. `let` anahtar kelimesi, bir sabit tanÄ±mlamak iÃ§in kullanÄ±lÄ±r. Zamanla, Swift dilindeki diÄŸer anahtar kelimelerle de tanÄ±ÅŸacaksÄ±nÄ±z.
//:
//: Ä°fadenin `= 101` kÄ±smÄ±, sabite bir deÄŸer _atadÄ±ÄŸÄ±nÄ±z_ kÄ±sÄ±mdÄ±r. Buna _deÄŸer atama_ denir ve eÅŸittir sembolÃ¼ `=` de _atama iÅŸareti_ olarak bilinir.
//:
//: - Callout(Not): Her yeni terimi birden aklÄ±nÄ±zda tutmaya odaklanmayÄ±n - bu, aÅŸÄ±rÄ± gelebilir ğŸ™‚ Bu terimleri eÄŸitimin geri kalanÄ±nda yerinde kullanÄ±lÄ±rken gÃ¶receksiniz, ve eÄŸer bilgilerinizi tazelemek isterseniz bu sayfaya her zaman geri dÃ¶nebilirsiniz. ğŸ˜‰
//:
//:[Geri](@previous)  |  Sayfa 8 / 13  |  [Ä°leri: Neler Ã–ÄŸrendik?](@next)
